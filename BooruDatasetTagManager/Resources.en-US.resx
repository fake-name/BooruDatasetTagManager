<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BtnImageExitFilter" xml:space="preserve">
    <value>Exit dataset filter</value>
  </data>
  <data name="BtnImageFilter" xml:space="preserve">
    <value>Filter in dataset</value>
  </data>
  <data name="BtnTagAdd" xml:space="preserve">
    <value>Add Tag</value>
  </data>
  <data name="BtnTagAddToAll" xml:space="preserve">
    <value>Add Tag to all</value>
  </data>
  <data name="BtnTagAddToFiltered" xml:space="preserve">
    <value>Add tag to filtered</value>
  </data>
  <data name="BtnTagAddToSelected" xml:space="preserve">
    <value>Add selected tags to selected image</value>
  </data>
  <data name="BtnTagApply" xml:space="preserve">
    <value>Apply Tags</value>
  </data>
  <data name="BtnTagCopy" xml:space="preserve">
    <value>Copy all tags of current image</value>
  </data>
  <data name="BtnTagDelete" xml:space="preserve">
    <value>Delete Tag</value>
  </data>
  <data name="BtnTagDeleteForAll" xml:space="preserve">
    <value>Delete tag for all iamges</value>
  </data>
  <data name="BtnTagDeleteForFiltered" xml:space="preserve">
    <value>Delete tag from filtered</value>
  </data>
  <data name="BtnTagDeleteForSelected" xml:space="preserve">
    <value>Remove selected tags for selected image</value>
  </data>
  <data name="BtnTagDown" xml:space="preserve">
    <value>Down</value>
  </data>
  <data name="BtnTagExitFilter" xml:space="preserve">
    <value>Reset filter</value>
  </data>
  <data name="BtnTagFilter" xml:space="preserve">
    <value>Filter in all tags</value>
  </data>
  <data name="BtnTagFindInAll" xml:space="preserve">
    <value>Find tag in "All Tags"</value>
  </data>
  <data name="BtnTagMultiModeSwitch" xml:space="preserve">
    <value>Multi-tag filtering mode</value>
  </data>
  <data name="BtnTagPaste" xml:space="preserve">
    <value>Paste Tags</value>
  </data>
  <data name="BtnTagPasteFromClipBoard" xml:space="preserve">
    <value>Paste Tags from clipboard(override)</value>
  </data>
  <data name="BtnTagRedo" xml:space="preserve">
    <value>Redo</value>
  </data>
  <data name="BtnTagReplace" xml:space="preserve">
    <value>Replace tag</value>
  </data>
  <data name="BtnTagSetToAll" xml:space="preserve">
    <value>Set current tag to all images</value>
  </data>
  <data name="BtnTagShow" xml:space="preserve">
    <value>Show formatted tag text</value>
  </data>
  <data name="BtnTagSwitch" xml:space="preserve">
    <value>Switch all tags/common tags mode</value>
  </data>
  <data name="BtnTagUndo" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="BtnTagUp" xml:space="preserve">
    <value>Up</value>
  </data>
  <data name="CheckBoxSkipExist" xml:space="preserve">
    <value>Skip exist tags</value>
  </data>
  <data name="GridCount" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="LabelDeleteFile" xml:space="preserve">
    <value>Delete File</value>
  </data>
  <data name="MenuItemLoadFolder" xml:space="preserve">
    <value>Load Folder</value>
  </data>
  <data name="MenuItemLoadLoss" xml:space="preserve">
    <value>Load loss from file</value>
  </data>
  <data name="MenuItemSaveChanges" xml:space="preserve">
    <value>Save Changes</value>
  </data>
  <data name="MenuItemShowPreview" xml:space="preserve">
    <value>Show Preview</value>
  </data>
  <data name="MenuItemTranslateTags" xml:space="preserve">
    <value>Translate Tags</value>
  </data>
  <data name="MenuLabelFile" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="MenuLabelSettings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="MenuLabelView" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="MenuShowCount" xml:space="preserve">
    <value>Show count for tag in all tags</value>
  </data>
  <data name="SettingAutocompChars" xml:space="preserve">
    <value>Chars</value>
  </data>
  <data name="SettingAutocompFont" xml:space="preserve">
    <value>Autocomplete Font</value>
  </data>
  <data name="SettingAutocompMode" xml:space="preserve">
    <value>Autocomplete mode</value>
  </data>
  <data name="SettingAutocompPrefix" xml:space="preserve">
    <value>Show autocomplete after</value>
  </data>
  <data name="SettingAutocompSort" xml:space="preserve">
    <value>Autocomplete sort</value>
  </data>
  <data name="SettingAutoSortCheck" xml:space="preserve">
    <value>Auto sort when changing selections</value>
  </data>
  <data name="SettingBtnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="SettingBtnChange" xml:space="preserve">
    <value>Change...</value>
  </data>
  <data name="SettingBtnSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SettingFixTagLoad" xml:space="preserve">
    <value>Fix tags on loading (replace '_' -&gt; ' ')</value>
  </data>
  <data name="SettingFixTagSave" xml:space="preserve">
    <value>Fix tags on saving ('('-&gt;'\(', ')'-&gt;'\)' )</value>
  </data>
  <data name="SettingInterrogatorMode" xml:space="preserve">
    <value>Tag Listing Mode</value>
  </data>
  <data name="SettingPreviewImageSize" xml:space="preserve">
    <value>Preview Image Size</value>
  </data>
  <data name="SettingPromptToSave" xml:space="preserve">
    <value>Prompt to save changes when changing selection</value>
  </data>
  <data name="SettingSeperatorLoad" xml:space="preserve">
    <value>Seperator on load</value>
  </data>
  <data name="SettingSeperatorSave" xml:space="preserve">
    <value>Seperator on save</value>
  </data>
  <data name="SettingTabGeneral" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="SettingTabTranslations" xml:space="preserve">
    <value>Translations</value>
  </data>
  <data name="SettingTabUI" xml:space="preserve">
    <value>UI</value>
  </data>
  <data name="SettingTranslationLanguage" xml:space="preserve">
    <value>Translation Language</value>
  </data>
  <data name="SettingTranslationOnlyManual" xml:space="preserve">
    <value>Load only manual translations into autocomplete</value>
  </data>
  <data name="SettingTranslationService" xml:space="preserve">
    <value>Translation Service</value>
  </data>
  <data name="SettingUILanguage" xml:space="preserve">
    <value>UI Language</value>
  </data>
  <data name="SettingUIRowHeight" xml:space="preserve">
    <value>Tags row height</value>
  </data>
  <data name="SettingUITagFont" xml:space="preserve">
    <value>Tags Font</value>
  </data>
  <data name="StatusCopied" xml:space="preserve">
    <value>Copied!</value>
  </data>
  <data name="StatusPasted" xml:space="preserve">
    <value>Pasted!</value>
  </data>
  <data name="StatusSaved" xml:space="preserve">
    <value>Saved.</value>
  </data>
  <data name="StatusSettingsSaved" xml:space="preserve">
    <value>Settings have been saved.</value>
  </data>
  <data name="StatusTranslating" xml:space="preserve">
    <value>Translating, please wait...</value>
  </data>
  <data name="StatusTranslationComplete" xml:space="preserve">
    <value>Translation completed.</value>
  </data>
  <data name="TipDatasetNoLoad" xml:space="preserve">
    <value>Dataset not load.</value>
  </data>
  <data name="TipDeleteFile" xml:space="preserve">
    <value>Are you sure you want to delete the selected image file?</value>
  </data>
  <data name="TipFolderWrong" xml:space="preserve">
    <value>Selected directory does not contain images!</value>
  </data>
  <data name="TipMultiImageCopy" xml:space="preserve">
    <value>Copying is only supported for single selection.</value>
  </data>
  <data name="TipMultiImagePaste" xml:space="preserve">
    <value>Pasting is only supported for single selection.</value>
  </data>
  <data name="TipSaveSettings" xml:space="preserve">
    <value>You must restart the application for the settings to take effect.</value>
  </data>
  <data name="TipSelectImage" xml:space="preserve">
    <value>Please select an image.</value>
  </data>
  <data name="TipTagLoad" xml:space="preserve">
    <value>Please wait while the tags are loading.
When changing csv or txt files,
the initial loading of tags may take a long time.</value>
  </data>
  <data name="UIInterrogatorNetwork" xml:space="preserve">
    <value>Tag Network</value>
  </data>
  <data name="UILabelAllTags" xml:space="preserve">
    <value>All Tags</value>
  </data>
  <data name="UILabelCommonTags" xml:space="preserve">
    <value>Common Tags</value>
  </data>
  <data name="UILabelDataSet" xml:space="preserve">
    <value>Dataset</value>
  </data>
  <data name="UILabelFixPromptLength" xml:space="preserve">
    <value>Don't sort first N rows :</value>
  </data>
  <data name="UILabelImageTags" xml:space="preserve">
    <value>Image Tags</value>
  </data>
</root>